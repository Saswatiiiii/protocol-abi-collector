[
  {
    "protocol": "zerolend_lending",
    "network": "ethereum",
    "contract_address": "0x11dCc26d4bDAc03FFa8841f69313C38240FC429e",
    "contract_name": "ZeroOFT",
    "verified": "yes",
    "events": "Approval(owner address, spender address, value uint256), EIP712DomainChanged(), EnforcedOptionSet(_enforcedOptions tuple[]), MsgInspectorSet(inspector address), OFTReceived(guid bytes32, srcEid uint32, toAddress address, amountReceivedLD uint256), OFTSent(guid bytes32, dstEid uint32, fromAddress address, amountSentLD uint256, amountReceivedLD uint256), OwnershipTransferred(previousOwner address, newOwner address), PeerSet(eid uint32, peer bytes32), PreCrimeSet(preCrimeAddress address), Transfer(from address, to address, value uint256)"
  },
  {
    "protocol": "stargate_v2",
    "network": "ethereum",
    "contract_address": "0x8731d54E9D02c286767d56ac03e8037C07e01e98",
    "contract_name": "Router",
    "verified": "yes",
    "events": "CachedSwapSaved(chainId uint16, srcAddress bytes, nonce uint256, token address, amountLD uint256, to address, payload bytes, reason bytes), OwnershipTransferred(previousOwner address, newOwner address), RedeemLocalCallback(srcChainId uint16, srcAddress bytes, nonce uint256, srcPoolId uint256, dstPoolId uint256, to address, amountSD uint256, mintAmountSD uint256), Revert(bridgeFunctionType uint8, chainId uint16, srcAddress bytes, nonce uint256), RevertRedeemLocal(srcChainId uint16, _srcPoolId uint256, _dstPoolId uint256, to bytes, redeemAmountSD uint256, mintAmountSD uint256, nonce uint256, srcAddress bytes)"
  },
  {
    "protocol": "stargate_v2",
    "network": "ethereum",
    "contract_address": "0x150f94B44927F078737562f0fcF3C95c01Cc2376",
    "contract_name": "RouterETH",
    "verified": "yes",
    "events": "-"
  },
  {
    "protocol": "stargate_v2",
    "network": "ethereum",
    "contract_address": "0x296F55F8Fb28E498B858d0BcDA06D955B2Cb3f97",
    "contract_name": "Bridge",
    "verified": "yes",
    "events": "OwnershipTransferred(previousOwner address, newOwner address), SendMsg(msgType uint8, nonce uint64)"
  },
  {
    "protocol": "stargate_v2",
    "network": "ethereum",
    "contract_address": "0x06D538690AF257Da524f25D0CD52fD85b1c2173E",
    "contract_name": "Factory",
    "verified": "yes",
    "events": "OwnershipTransferred(previousOwner address, newOwner address)"
  },
  {
    "protocol": "stargate_v2",
    "network": "ethereum",
    "contract_address": "0xAf5191B0De278C7286d6C7CC6ab6BB8A73bA2Cd6",
    "contract_name": "StargateToken",
    "verified": "yes",
    "events": "Approval(owner address, spender address, value uint256), OwnershipTransferred(previousOwner address, newOwner address), Paused(isPaused bool), ReceiveFromChain(srcChainId uint16, nonce uint64, qty uint256), SendToChain(dstChainId uint16, to bytes, qty uint256), Transfer(from address, to address, value uint256)"
  },
  {
    "protocol": "uniswap_v2",
    "network": "ethereum",
    "contract_address": "0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f",
    "contract_name": "UniswapV2Factory",
    "verified": "yes",
    "events": "PairCreated(token0 address, token1 address, pair address,  uint256)"
  },
  {
    "protocol": "uniswap_v2",
    "network": "ethereum",
    "contract_address": "0xC0AeE478e3658e2610c5F7A4A2E1777cE9e4f2Ac",
    "contract_name": "UniswapV2Factory",
    "verified": "yes",
    "events": "PairCreated(token0 address, token1 address, pair address,  uint256)"
  },
  {
    "protocol": "uniswap_v3",
    "network": "ethereum",
    "contract_address": "0x1F98431c8aD98523631AE4a59f267346ea31F984",
    "contract_name": "UniswapV3Factory",
    "verified": "yes",
    "events": "FeeAmountEnabled(fee uint24, tickSpacing int24), OwnerChanged(oldOwner address, newOwner address), PoolCreated(token0 address, token1 address, fee uint24, tickSpacing int24, pool address)"
  },
  {
    "protocol": "uniswap_v3",
    "network": "ethereum",
    "contract_address": "0xE592427A0AEce92De3Edee1F18E0157C05861564",
    "contract_name": "SwapRouter",
    "verified": "yes",
    "events": "-"
  },
  {
    "protocol": "aave_v3",
    "network": "ethereum",
    "contract_address": "0x7BeA39867e4169DBe237d55C8242a8f2fcDcc387",
    "contract_name": "UniswapV3Pool",
    "verified": "yes",
    "events": "Burn(owner address, tickLower int24, tickUpper int24, amount uint128, amount0 uint256, amount1 uint256), Collect(owner address, recipient address, tickLower int24, tickUpper int24, amount0 uint128, amount1 uint128), CollectProtocol(sender address, recipient address, amount0 uint128, amount1 uint128), Flash(sender address, recipient address, amount0 uint256, amount1 uint256, paid0 uint256, paid1 uint256), IncreaseObservationCardinalityNext(observationCardinalityNextOld uint16, observationCardinalityNextNew uint16), Initialize(sqrtPriceX96 uint160, tick int24), Mint(sender address, owner address, tickLower int24, tickUpper int24, amount uint128, amount0 uint256, amount1 uint256), SetFeeProtocol(feeProtocol0Old uint8, feeProtocol1Old uint8, feeProtocol0New uint8, feeProtocol1New uint8), Swap(sender address, recipient address, amount0 int256, amount1 int256, sqrtPriceX96 uint160, liquidity uint128, tick int24)"
  },
  {
    "protocol": "aave_v3",
    "network": "ethereum",
    "contract_address": "0x64E2b9cE3e4B18D6a9c09d206BD8cA4D7d4D1c3A",
    "contract_name": "",
    "verified": "no",
    "events": "-"
  }
]